
# Sensor Lists

## Information for Permitting Sensors
( this list may be incomplete, please check with SOI for an official list)

### Meteorological Systems
```{ojs}
//| echo: false

met_sensors = 'https://raw.githubusercontent.com/schmidtocean/schmidtocean_platform_metadata/main/meterological_sensors.json'
met = d3.json(met_sensors)
Inputs.table(met, {
  columns: [ 
    "label",
     "instrument_type",
    "permit_parameters",
   ],
   width:{
    label: 75,
    instrument_type: 100,
    permit_parameters:100
   },
})
```

### Seawater Systems
```{ojs}
//| echo: false
//| 
sea_sensors = 'https://raw.githubusercontent.com/schmidtocean/schmidtocean_platform_metadata/main/seawater_sensors.json'
sea = d3.json(sea_sensors)
Inputs.table(sea, {
  columns: [ 
    "label",
     "instrument_type",
    "permit_parameters"
   ]
})
```

### ROV *SuBastian* Systems
```{ojs}
//| echo: false
//| 
sub_sensors = 'https://raw.githubusercontent.com/schmidtocean/schmidtocean_platform_metadata/main/rov_sensors.json'
sub = d3.json(sub_sensors)
Inputs.table(sea, {
  columns: [ 
    "label",
     "instrument_type",
    "permit_parameters"
   ]
})
```

<!-- 
```{ojs}
//| echo: false
sensors = FileAttachment("./data/sensorlist_temp.csv").csv({typed: true})
viewof search = Inputs.search(sensors)
Inputs.table(search,{
format: {
    Link: (links) =>links.includes("None") ? "None": htl.html`<a href=${links} target=_blank>${links}</a>`
  },
  rows: 60
  })

```` -->

# Data Corrections

# Derived Data

# NMEA Referrence
